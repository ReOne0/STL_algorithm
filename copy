#include<vector>
#include<algorithm>


//copy指定范围拷贝到另一个个容器中 replace 指定范围修改为新的元素 replace_if指定范围内符合条件的替换为新的元素 swap 交换元素
void MyPrint(int val)
{
	cout << val << " ";
}
class MyReplace
{
public:
	bool operator()(int val)
	{
		return val > 5;
	}
};
void test01()
{
	vector<int>v1;
	for (int i = 0; i < 10; i++)
	{
		v1.push_back(i);
	}
	vector<int>v2;
	v2.resize(v1.size());
	copy(v1.begin(), v1.end(), v2.begin());//copy要提前开好内存,跟赋值操作很类似，所以copy很少用，
	replace(v2.begin(), v2.end(), 1, 6);//把指定范围内的指定值替换成新的值
	replace_if(v2.begin(), v2.end(), MyReplace(), 7);//通过迭代器，谓词来更改条件
	v2.push_back(2);
	swap(v1, v2);//同种类型的容器，不需要提供大小容量，猜测：应该是改变了指针的指向
	for_each(v1.begin(), v1.end(), MyPrint);

}
